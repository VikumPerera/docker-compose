services:
  mysql:
    image: mysql:8.4.3
    container_name: mysql
    extends:
      file: common-config.yaml
      service: microservice-db-config

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yaml
      service: network-deploy-service

  configServer:
    image: "vikum92/config-server:s10"
    container_name: configServer
    ports:
      - "8071:8071"
    #    depends_on:
    #      rabbitmq:
    #        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-base-config


  eurekaServer:
    image: "vikum92/eureka-server:s10"
    container_name: eurekaServer
    ports:
      - "8070:8070"
    depends_on:
      configServer:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yaml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaServer"

  account:
    image: "vikum92/account:s10"
    container_name: account
    ports:
      - "8080:8080"
    depends_on:
      configServer:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700M
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: "account"
    extends:
      file: common-config.yaml
      service: microservice-eureka-config

  card:
    image: "vikum92/card:s10"
    container_name: card
    ports:
      - "8081:8081"
    depends_on:
      configServer:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700M
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: "card"
    extends:
      file: common-config.yaml
      service: microservice-eureka-config

  loan:
    image: "vikum92/loan:s10"
    container_name: loan
    ports:
      - "8082:8082"
    depends_on:
      configServer:
        condition: service_healthy
      eurekaServer:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700M
    networks:
      - microservice
    environment:
      SPRING_APPLICATION_NAME: "loan"
    extends:
      file: common-config.yaml
      service: microservice-eureka-config

  gatewayServer:
    image: "vikum92/gateway-server:s10"
    container_name: gatewayServer
    ports:
      - "8072:8072"
    depends_on:
      account:
        condition: service_healthy
      loan:
        condition: service_healthy
      card:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayServer"
      SPRING_DATA_REDIS_CONNECT-TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    extends:
      file: common-config.yaml
      service: microservice-eureka-config

networks:
  microservice:
    driver: bridge
